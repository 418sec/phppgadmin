WEBDB TODO LIST FOR DEVELOPERS
------------------------------

WebDB is an open source project which means that if you see something on this list
that you would like to implement, just send us a patch.  You can find our project
page here:

http://sourceforge.net/projects/phppgadmin/

An item is marked 'claimed' when a username in brackets is put after the TODO
item.

Connections
-----------

* Need to better handle connection errors. Give users a config option to display the error returned 
  from the database.

Users
-----

* Basically done

Groups
------

* Unimplemented

Permissions [ Robert ]
-----------

* Allow granting of perms
* Allow revoking of perms
* Allow display of grants on an object
* Allow display of grants for a user
* Allow display of grants for a group

Databases
---------

* Allow create/drop/alter databases

Tables
------

* Not using proper attFields array for attribute info (i was being lazy)
* Browse doesn't implement paging
* Have a common browse function for 'select' and 'browse' actions on a table
* Create table
* Modify column - default, nullability, etc.
* Constraints - note massive 7.3 changes here
* Vacuum & analyze
* Dumps as CSV, XML or database specific bulk load format
* Create table (chriskl)
* Insert and edit row aren't smart - eg. it will quote everything including 'current_timestamp'
  in a timestamp field.  We need to detect if they're inserting into a timestamp field with a magic
  value and then not quote it.
* Create index

Views
-----

* Basically stable as far as I can see

Functions
---------

* Need to add a drop link to the properties and edit pages.
* Add Postgres 7.3 support

Sequences
---------

* Create Sequences

Indicies [ Robert ]
--------

* Drop Indicies

Types
-----

* Unimplemented
* Support new 7.3 anonymous composite types

Operators
---------

* Unimplemented

Operator Classes
----------------

* Unimplemented

Rules
-----

* Unimplemented
* Have accessible on a per-table basis

Triggers
--------

* Unimplemented
* Have accessible on a per-table basis

Aggregates
----------

* Unimplemented

Languages
---------

* Unimplemented
* Note: Are not in schemas in 7.3 - they are database-wide

Domains (7.3)
-------------

* Unimplemented
* Note: will need to be added to lists of types when creating tables, etc.

Conversions (7.3)
-----------------

* Some functions implemented in 73
* No interface done

Casts (7.3)
-----------

* Unimplemented

Schemas
-------

I added schema support to the left nav bar, however I discovered that it doesn't work as-is.  The problem is that it always gets the list of schemas from template1 - because we're always connected to that database.  If you changed it to reconnect for every database while drawing the left nav it'd be really slow.  Hence I propose that the left nav is modified somewhat to be like this:

* Initially, a list of hrefs to databases
* When a database href is clicked on, the page reloads with plain hrefs to the other databases, but an expandable tree for the selected database.
* That way, everything should be nice
* Create schema, drop schema

Settings
--------

* Postgres 7.3 returns SHOW ALL as a proper result set - makes it easy to do a phpMyAdmin style 'view settings'.

Translations
------------

* There's heaps of hard-coded English strings in the code.  (Due to sheer laziness)

Exotic
------

* Support contrib/tsearch for easy full text indexes

Principles
----------

* register_globals off support
* maximum error_reporting support - enforces code quality, reduces bugs and improves security
* PHP 4.2 features used
* No HTML font, colour, layout tags.  Use CSS for everything
* One day we should make it all XHTML
* everything properly escaped - prevent sql injection and cross-site scripting probs
* Support Postgres 7.0 and upwards
* psql -E is a cool way of seeing how to do schema queries
* Checking out older versions of describe.c in src/bin/psql in the postgres distro is a good way of seeing how to query older versions of postgres for schema information
* Put functions in the highest class possible.  For instance, simple selects should be in BaseDB, whereas something that works for 7.1+ should be in the 7.1 class.  This will minimise bugs and duplicated code.
* We primarily support Postgres, and only secondarily support MySQL, etc.
* Adhere to current coding standards
* Avoid using global variables if possible

PHP
---

* Check for register_globals
* Check for magic_quotes - ALL CURRENT CODE ASSUMES MAGIC_QUOTES OFF
* Check for postgres/mysql/oracle/whatever functions compiled in and give good help on how to compile it in

