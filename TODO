PHPPGADMIN TODO LIST FOR DEVELOPERS
-----------------------------------

phpPgAdmin is an open source project which means that if you see something on 
this list that you would like to implement, just send us a patch.  You can find
our project page here:

	http://sourceforge.net/projects/phppgadmin/

An item is marked 'claimed' when a username in brackets is put after the TODO
item.

An item is marked with a '-' if it has been completed.

Connections
-----------

* -Need to better handle connection errors. (chriskl)
* -Give users a config option to display the error returned 
  from the database. (chriskl - not done, security hole?)

Users
-----

* Basically done

Groups
------

* -Group properties / membership
* Alter group
* -Allow selecting of members when creating group (chriskl)

Permissions
-----------

* -Allow granting of perms (chriskl)
* Allow granting on functions
* Allow revoking of perms
* -Allow display of grants on an object
* Allow display of grants for a user
* Allow display of grants for a group

Databases
---------

* Fix create/drop databases (chriskl) (no longer working in cvs)
* Add alter database for 7.3+
* -Execute arbitrary SQL (chriskl)
* Dump database
* Creating new database should refresh left pane? What about creating schemas
  and tables - they're in the left pane too?
* -Show encoding of databases (chriskl)

Tables
------

* Not using proper attFields array for attribute info (i was being lazy)
* -Browse doesn't implement paging (chriskl)
* -Browse only shows 30 rows at the moment! (chriskl)
* -Have a common browse function (chriskl)
* -Create table (chriskl)
* -Modify column - default, nullability, etc. (chriskl)
* Add column, set foreign key.
* -Constraints - note massive 7.3 changes here (chriskl)
* Vacuum & analyze
* -Dumps as CSV, XML or database specific bulk load format (chriskl)
* SQL dump doesn't quote properly for some data types
* Insert and edit row aren't smart - eg. it will quote everything including 'current_timestamp'
  in a timestamp field.  We need to detect if they're inserting into a timestamp field with a magic
  value and then not quote it.
* Insert needs the ability to use functions. It should also be able to handle some keywords (like DEFAULT) though it might be able to use function tech to accomplish this.


Views
-----

* -Browse on view

Functions
---------

* -Need to add a drop link to the properties and edit pages.(robert)
* -Add Postgres 7.3 support(robert)
* Add support for immutable+ (7.3) and iscacheable+ (7.2) 


Sequences
---------

* -Create Sequences (Shannon Peevey, chriskl)

Indexes 
-------

* -Drop Index (chriskl - bug in message?)
* -Create index needs more options, eg. hash or btree (felix)

Types
-----

* Basically implemented.
* Support new 7.3 anonymous composite types

Operators
---------

* Unimplemented

Operator Classes
----------------

* Unimplemented

Rules
-----

* -Create rule (chriskl)
* -Alter rule (chriskl)
* -Have accessible on a per-table basis (chriskl)

Triggers
--------

* -Create trigger (felix)
* Alter trigger (7.3+)
* -Have accessible on a per-table basis (chriskl)

Aggregates
----------

* Unimplemented

Languages
---------

* Unimplemented
* Note: Are not in schemas in 7.3 - they are database-wide

Domains (7.3)
-------------

* Unimplemented.  They do appear as normal types though.

Conversions (7.3)
-----------------

* Some functions implemented in 73
* No interface done

Casts (7.3)
-----------

* Unimplemented

Schemas
-------

* -Create schema, drop schema (chriskl)
* -Not all operations yet respect schema settings (chriskl)
* -Schema menu link results in 404 (robert)

Settings
--------

* Postgres 7.3 returns SHOW ALL as a proper result set - makes it easy to do a phpMyAdmin style 'view settings'.

Translations
------------

* -There's heaps of hard-coded English strings in the code.  (Due to sheer laziness) (chriskl, rafal)

Miscellaneous
-------------

* Add support for RESTRICT/CASCADE in 7.3

Exotic
------

* Support contrib/tsearch for easy full text indexes

Principles
----------

* register_globals off support
* maximum error_reporting support - enforces code quality, reduces bugs and 
  improves security
* PHP 4.2 features used
* No HTML font, colour, layout tags.  Use CSS for everything
* One day we should make it all XHTML
* everything properly escaped - prevent sql injection and cross-site scripting 
  probs
* Support Postgres 7.0 and upwards
* psql -E is a cool way of seeing how to do schema queries
* Checking out older versions of describe.c in src/bin/psql in the postgres 
  distro is a good way of seeing how to query older versions of postgres for 
  schema information
* Put functions in the highest class possible.  For instance, simple selects 
  should be in BaseDB, whereas something that works for 7.1+ should be in the 
  7.1 class.  This will minimise bugs and duplicated code.
* We primarily support Postgres, and only secondarily support MySQL, etc.
* Adhere to current coding standards
* Avoid using global variables if possible

PHP
---

* -Check for magic_quotes - automatically stripslashes (chriskl)
* Check for postgres/mysql/oracle/whatever functions compiled in and give good help on how to compile it in

